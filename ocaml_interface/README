* Compilation:

  To compile run "make all", which an executable called 'checker'.

  If the source code in Coq changes, you should compile extract.v in
  order to generate checker.ml and checker.mli

* Run the checker

  To run it execute "checker", and prove (in 3 separeted lines):

   the optimized block
   the original block
   the size of the initial stack.

  It will accept instance until the end of file (^D)

  Examples:

   > ./checker
   POP PUSH1 0xb DUP2 PUSH1 0x20 ADD PUSH1 0x1 SWAP3 MLOAD PUSH1 0x2
   POP PUSH1 0xB SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP3 SWAP2 SWAP1 PUSH1 0x2
   2
   PUSH1 0x0 PUSH1 0x0 PUSH2 0x100 EXP PUSH1 0xff DUP2 PUSH1 0x0 ISZERO ISZERO MUL SWAP2 MUL NOT PUSH1 0x10 SLOAD AND OR    PUSH1 0x10
   PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1
   0
   ^D


   > ./checker < examples.txt


